# ==============================================================================
#  CMakeOpts.txt
#    ** このファイルを直接編集してコミットしないようにお願いします **
#    ** DO NOT edit and commit this file. **
#
#    次の変数を定義する
#    This file defines following variable.
#
#	DEFINE_MACROS		Compile macros.
#	INCLUDE_PATHS		Include paths.
#	COMP_FLAGS		Compile options.
#	LINK_FLAGS		Link options.
#
#    Windows (Visual Studio):
#	COMP_FLAGS_<conf>	Configuration specific compile options.
#	LINK_FLAGS_<conf>	Configuration specific link options.
#		where <conf> is one of "DEBUG", "RELEASE" or "TRACE".
#
#    ${ARCHITECTURE} is passed as  "x86" or "x64" accoding to paltform using.
#
# ==============================================================================

# ------------------------------------------------------------------------------
#  for both Windows and unix
#
set(DEFINE_MACROS_DEFAULT	SPRINGHEAD)
set(INCLUDE_PATHS_DEFAULT	.
				${SPR_INC_DIR}
				${SPR_SRC_DIR})

# ------------------------------------------------------------------------------
#  for Windows (Visual Studio)
#
if(Windows)
    set(INCDIR_DEFAULT	${SPR_TOP_DIR}/dependency/src)
    #
    set(COPT_DEFAULT	"/Zi /W3 /sdl /MP /D _LIB /GF- /Gm- /EHsc /GS /Gy- /Qpar \
			 /arch:AVX /fp:precise /openmp \
			 /wd\"4996\" /wd\"4244\" /wd\"4251\" /FC")
    set(COPT_DEBUG	"/JMC /Od /Ob0 /Oy- /RTC1 /MDd /fp:except /Gd")
    set(COPT_RELEASE	"/O2 /Ob2 /Ot /Oy /MD /Gr")
    set(COPT_TRACE	"/O2 /Ob2 /Ot /Oy- /D TRACE /Gr")
    #
    string(TOUPPER ${ARCHITECTURE} _arch)
    set(LOPT_DEFAULT	"/ERRORREPORT:PROMPT /IGNORE:4099 /IGNORE:4221 /NXCOMPAT \
			 /MANIFEST:NO /MANIFESTUAC:YES /DYNAMICBASE /NOLOGO \
			 /MACHINE:${_arch}")
    set(LOPT_DEBUG	/DEBUG)
    set(LOPT_RELEASE	)
    set(LOPT_TRACE	)
    #
    set(DEFINE_MACROS		${DEFINE_MACROS_DEFAULT})
    set(INCLUDE_PATHS		${INCLUDE_PATHS_DEFAULT} ${INCDIR_DEFAULT})
    set(COMP_FLAGS		${COPT_DEFAULT})
    set(COMP_FLAGS_DEBUG	${COPT_DEBUG})
    set(COMP_FLAGS_RELEASE	${COPT_RELEASE})
    set(COMP_FLAGS_TRACE	${COPT_TRACE})
    set(LINK_FLAGS		${LOPT_DEFAULT})
    set(LINK_FLAGS_DEBUG	${LOPT_DEBUG})
    set(LINK_FLAGS_RELEASE	${LOPT_RELEASE})
    set(LINK_FLAGS_TRACE	${LOPT_TRACE})
endif()	# Windows

# ------------------------------------------------------------------------------
#  Compile options for unix (g++).
#
if(unix)
    set(INCDIR_DEFAULT	/usr/X11R6/include
			/usr/X11/include)
    #
    set(COPT_WARNING_FLAGS
			-Wall
			-Wno-unused-variable
			-Wno-unused-but-set-variable
			-Wno-unused-result
			-Wno-unused-value
			-Wno-unused-local-typedefs
			-Wno-unused-function
			-Wno-reorder
			-Wno-sign-compare
			-Wno-unknown-pragmas)
    if(${CMAKE_CONFIGURATION_TYPES} STREQUAL Debug)
	set(COPT_CONFIG	-g)
    else()
	set(COPT_CONFIG	-O2)
    endif()
    set(COPT_DEFAULT	${COPT_WARNING_FLAGS}
			${COPT_CONFIG}
			-fPIC
			-std=gnu++11
			-D__ccdecl=
			-D__cdecl=)
    #
    if("${SPR_PROJS}" STREQUAL "${EMPTY}")
	if("${LIBTYPE}" STREQUAL "STATIC")
	    set(SPRLIB_PATHS	${SPR_TOP_DIR}/generated/lib)
	    set(SPRLIB_NAMES	Springhead)
	else()
	    #  環境変数 LD_LIBRARY_PATH の設定も必要です
	    #  Environment variable LD_LIBRARY_PATH should be set appropreately.
	    set(SPRLIB_PATHS	)
	    set(SPRLIB_NAMES	Springhead)
	endif()
    else()
	set(SPRLIB_PATHS	${EMPTY})
	set(SPRLIB_NAMES	${EMPTY})
    endif()
    set(STDLIB_PATHS	/usr/lib /usr/X11R6/lib /usr/lib/X11)
    set(STDLIB_NAMES	X11 Xi Xmu glui glut GLEW GLU GL m dl boost_regex)
    #
    set(DEFINE_MACROS	${DEFINE_MACROS_DEFAULT})
    set(INCLUDE_PATHS	${INCLUDE_PATHS_DEFAULT} ${INCDIR_DEFAULT})
    set(COMP_FLAGS	${COPT_DEFAULT})
    set(LINK_FLAGS	)
    set(LIBRARY_PATHS	${SPRLIB_PATHS} ${STDLIB_PATHS})
    set(LIBRARY_NAMES	${SPRLIB_NAMES} ${STDLIB_NAMES})
    #
endif()	# unix

# end: CMakeOpts.txt
