# ******************************************************************************
#  CMake settings for Springhead Application
#
# ******************************************************************************
set(EMPTY)

# ------------------------------------------------------------------------------
#  Which OS?
#
if("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Windows")
    set(Windows True)
elseif("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Linux")
    set(Linux True)
    set(unix True)
endif()
set(Cygwin  False)
set(MacOS   False)

# ------------------------------------------------------------------------------
#  Project name.
#	Define porject name here.
#
set(ProjectName SpidarG6)

# ------------------------------------------------------------------------------
#  Binary(working) directory name used when you cmake Springhead library.
#	In order to optimize build process between Springhead projects and
#	your application program, you should adopt take "out-of-source"
#	build method.
#
set(OOS_BLD_DIR "build")

# ------------------------------------------------------------------------------
#  Configuration type(s).
#	Remove unneccessary configuration type(s).
#	Windows (Visual Studio) allows multiple configuration.
#	Unix (make) allows only single configuration (Debug or Release).
#
if(Windows)
    set(CMAKE_CONFIGURATION_TYPES Debug Release Trace)
else()
    set(CMAKE_CONFIGURATION_TYPES Release)
endif()

# ------------------------------------------------------------------------------
#  Library type.
#	Select one of STATIC or SHARED.
#	(Type SHARED is not supported for Windows)
#
set(LIBTYPE STATIC)
#set(LIBTYPE SHARED)

# ------------------------------------------------------------------------------
#  Source/include file names to incorporate to the application program.
#	${CMAKE_SOURCE_DIR} is the top level of the current CMake source
#	tree. In usual case, where the top level "CMakeLists.txt" is.
#	If you want to refer current (sublevel) source directory, use
#	${CMAKE_CURRENT_SOURCE_DIR} instead.
#
file(GLOB SRCS RELATIVE ${CMAKE_SOURCE_DIR} *.cpp *.h)

# ------------------------------------------------------------------------------
#  Source/include file name(s) to EXCLUDE from compilation.
#	Replace '${EMPTY}' with file name(s).
#	Wild card is NOT available here.
#	We recomend to use absolute path if file exists outside of
#	current source directory (${CMAKE_SOURCE_DIR}).
#
set(EXCLUDE_SRCS ${EMPTY})

# ------------------------------------------------------------------------------
#  Springhead projects to incorporate in the application program.
#	Remove unneccessary project name(s).
#	Do not include 'RunSwig' in this list.
#  If you need Springehad library only, leave this parameter unchaged.
#
if(Windows)
    set(SPR_PROJS Base Collision Creature FileIO Foundation Framework Graphics
		HumanInterface Physics)
    #set(SPR_PROJS ${SPR_PROJS} EmbPython)
else()
    set(SPR_PROJS ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Additional compile macro(s).
#	format:  "<name>=<value>" or "<name>"
#	Do not prepend "/D" nor "-D" to macro body.
#	See "CMakeOpts.txt.dist" for default paths.
#
set(DEFINE_MACROS_ADD ${EMPTYY})

# ------------------------------------------------------------------------------
#  Additional include path(s).
#	Replace '${EMPTY}' with absolute path(s).
#	See "CMakeOpts.txt.dist" for default paths.
#
if(Windows)
    set(INCLUDE_PATHS_ADD ${EMPTY})
else()
    set(INCLUDE_PATHS_ADD ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Additional compile/link flag(s).
#	Replace '${EMPTY}' with absolute path(s).
#	See "CMakeOpts.txt.dist" for default paths.
if(Windows)
    set(COMP_FLAGS_ADD ${EMPTY})
    set(LINK_FLAGS_ADD ${EMPTY})
else()
    set(COMP_FLAGS_ADD ${EMPTY})
    set(LINK_FLAGS_ADD ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Additional library path(s).
#	Replace '${EMPTY}' with absolute path(s).
#	See "CMakeOpts.txt.dist" for default paths.
#
if(Windows)
    set(LIBRARY_PATHS_ADD ${EMPTY})
else()
    set(LIBRARY_PATHS_ADD ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Additional library name(s) required.
#	Replace '${EMPTY}' with file name(s).
#	See "CMakeOpts.txt.dist" for default paths.
#
if(Windows)
    set(LIBRARY_NAMES_ADD ${EMPTY})
#    set(LIBRARY_NAMES_ADD XINPUT9_1_0.LIB)
#    set(LIBRARY_NAMES_DEBUG   python35_d.lib)
#    set(LIBRARY_NAMES_RELEASE python35.lib)
#    set(LIBRARY_NAMES_TRACE   python35.lib)
else()
    set(LIBRARY_NAMES_ADD ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Default library name(s) to EXCLUDE from linking.
#	Replace '${EMPTY}' with file name(s).
#
if(Windows)
    set(EXCLUDE_LIBRARY_NAMES ${EMPTY})
#    set(EXCLUDE_LIBRARY_NAMES XINPUT.LIB)
else()
    set(EXCLUDE_LIBRARY_NAMES ${EMPTY})
endif()

# ------------------------------------------------------------------------------
#  Visual Studio Version.
#
set(VS_VERSION "15.0")

# ------------------------------------------------------------------------------
#  Visual Studio Debugger settings.
#	DEBUGGER_WORKING_DIRECTORY:
#		Debugger working directory. Default is ${CMAKE_SOURCE_DIR},
#		i.e. the directory where this file (CMakeLists.txt) is.
#	DEBUGGER_COMMAND_ARGUMENTS:
#		Debugger command line arguments.
if(Windows)
    set(DEBUGGER_WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
    set(DEBUGGER_COMMAND_ARGUMENTS ${EMPTY})
endif()

# end: CMakeSettings.txt
